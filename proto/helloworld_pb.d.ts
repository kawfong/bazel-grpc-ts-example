// @generated by protoc-gen-es v1.6.0 with parameter "keep_empty_files=true,target=js+dts"
// @generated from file proto/helloworld.proto (package greeter, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message greeter.HelloRequest
 */
export declare class HelloRequest extends Message<HelloRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<HelloRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "greeter.HelloRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HelloRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HelloRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HelloRequest;

  static equals(a: HelloRequest | PlainMessage<HelloRequest> | undefined, b: HelloRequest | PlainMessage<HelloRequest> | undefined): boolean;
}

/**
 * @generated from message greeter.HelloReply
 */
export declare class HelloReply extends Message<HelloReply> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<HelloReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "greeter.HelloReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HelloReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HelloReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HelloReply;

  static equals(a: HelloReply | PlainMessage<HelloReply> | undefined, b: HelloReply | PlainMessage<HelloReply> | undefined): boolean;
}

